-- Made with 'mini.colors' module of https://github.com/nvim-mini/mini.nvim

if vim.g.colors_name ~= nil then
	vim.cmd("highlight clear")
end
vim.g.colors_name = "nano"

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, "@attribute", { link = "Constant" })
hi(0, "@constructor", { fg = "#445f96" })
hi(0, "@constructor.lua", { fg = "#373e50" })
hi(0, "@exception", { bold = true, fg = "#b23b34" })
hi(0, "@keyword.luap", { link = "@string.regex" })
hi(0, "@keyword.operator", { bold = true, fg = "#b23b34" })
hi(0, "@keyword.return", { fg = "#b23b34", italic = true })
hi(0, "@lsp.mod.readonly", { link = "Constant" })
hi(0, "@lsp.mod.typeHint", { link = "Type" })
hi(0, "@lsp.type.builtinConstant", { link = "@constant.builtin" })
hi(0, "@lsp.type.comment", {})
hi(0, "@lsp.type.macro", { fg = "#a292a3" })
hi(0, "@lsp.type.magicFunction", { link = "@function.builtin" })
hi(0, "@lsp.type.method", { link = "@method" })
hi(0, "@lsp.type.namespace", { link = "@namespace" })
hi(0, "@lsp.type.parameter", { link = "@parameter" })
hi(0, "@lsp.type.selfParameter", { link = "@variable.builtin" })
hi(0, "@lsp.typemod.function.builtin", { link = "@function.builtin" })
hi(0, "@lsp.typemod.function.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.function.readonly", { bold = true, fg = "#537788" })
hi(0, "@lsp.typemod.keyword.documentation", { link = "Special" })
hi(0, "@lsp.typemod.method.defaultLibrary", { link = "@function.builtin" })
hi(0, "@lsp.typemod.operator.controlFlow", { link = "@exception" })
hi(0, "@lsp.typemod.operator.injected", { link = "Operator" })
hi(0, "@lsp.typemod.string.injected", { link = "String" })
hi(0, "@lsp.typemod.variable.defaultLibrary", { link = "Special" })
hi(0, "@lsp.typemod.variable.global", { link = "Constant" })
hi(0, "@lsp.typemod.variable.injected", { link = "@variable" })
hi(0, "@lsp.typemod.variable.static", { link = "Constant" })
hi(0, "@namespace", { fg = "#a06c4e" })
hi(0, "@punctuation.bracket", { fg = "#6e6b66" })
hi(0, "@punctuation.delimiter", { fg = "#6e6b66" })
hi(0, "@punctuation.special", { fg = "#445f96" })
hi(0, "@string.escape", { fg = "#a06c4e" })
hi(0, "@string.regex", { fg = "#a06c4e" })
hi(0, "@symbol", { fg = "#1b1b1b" })
hi(0, "@tag.attribute", { fg = "#1b1b1b" })
hi(0, "@tag.delimiter", { fg = "#6e6b66" })
hi(0, "@text.danger", { bg = "#e84444", bold = true, fg = "#1b1b1b" })
hi(0, "@text.diff.add", { fg = "#969438" })
hi(0, "@text.diff.delete", { fg = "#b73242" })
hi(0, "@text.emphasis", { italic = true })
hi(0, "@text.environment", { link = "Keyword" })
hi(0, "@text.environment.name", { link = "String" })
hi(0, "@text.literal", { link = "String" })
hi(0, "@text.math", { link = "Constant" })
hi(0, "@text.note", { bg = "#69827b", bold = true, fg = "#223249" })
hi(0, "@text.quote", { link = "@parameter" })
hi(0, "@text.reference.markdown_inline", { link = "htmlLink" })
hi(0, "@text.strong", { bold = true })
hi(0, "@text.title", { link = "Function" })
hi(0, "@text.title.1.markdown", { fg = "#b23b34" })
hi(0, "@text.title.1.marker.markdown", { link = "Delimiter" })
hi(0, "@text.title.2.markdown", { fg = "#b23b34" })
hi(0, "@text.title.2.marker.markdown", { link = "Delimiter" })
hi(0, "@text.title.3.markdown", { fg = "#b23b34" })
hi(0, "@text.title.3.marker.markdown", { link = "Delimiter" })
hi(0, "@text.title.4.markdown", { fg = "#b23b34" })
hi(0, "@text.title.4.marker.markdown", { link = "Delimiter" })
hi(0, "@text.title.5.markdown", { fg = "#b23b34" })
hi(0, "@text.title.5.marker.markdown", { link = "Delimiter" })
hi(0, "@text.title.6.markdown", { fg = "#b23b34" })
hi(0, "@text.title.6.marker.markdown", { link = "Delimiter" })
hi(0, "@text.todo.checked", { fg = "#a0a0a0" })
hi(0, "@text.todo.unchecked", { fg = "#b23b34" })
hi(0, "@text.uri.markdown_inline", { link = "htmlString" })
hi(0, "@text.warning", { bg = "#c87b2e", bold = true, fg = "#223249" })
hi(0, "@variable", { fg = "#1b1b1b" })
hi(0, "@variable.builtin", { fg = "#b23b34", italic = true })
hi(0, "Boolean", { bold = true, fg = "#a06c4e" })
hi(0, "Character", { link = "String" })
hi(0, "CmpCompletion", { link = "Pmenu" })
hi(0, "CmpCompletionBorder", { bg = "#223249", fg = "#2d4f67" })
hi(0, "CmpCompletionSbar", { link = "PmenuSbar" })
hi(0, "CmpCompletionSel", { bg = "#2d4f67" })
hi(0, "CmpCompletionThumb", { link = "PmenuThumb" })
hi(0, "CmpDocumentation", { link = "NormalFloat" })
hi(0, "CmpDocumentationBorder", { link = "FloatBorder" })
hi(0, "CmpItemAbbr", { fg = "#787878" })
hi(0, "CmpItemAbbrDefault", { fg = "#303030" })
hi(0, "CmpItemAbbrDeprecated", { fg = "#a0a0a0", strikethrough = true })
hi(0, "CmpItemAbbrDeprecatedDefault", { fg = "#a0a0a0" })
hi(0, "CmpItemAbbrMatch", { fg = "#b23b34" })
hi(0, "CmpItemAbbrMatchDefault", { fg = "#303030" })
hi(0, "CmpItemAbbrMatchFuzzy", { link = "CmpItemAbbrMatch" })
hi(0, "CmpItemAbbrMatchFuzzyDefault", { fg = "#303030" })
hi(0, "CmpItemKindClass", { link = "Type" })
hi(0, "CmpItemKindClassDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindColorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstant", { link = "Constant" })
hi(0, "CmpItemKindConstantDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindConstructor", { link = "@constructor" })
hi(0, "CmpItemKindConstructorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindCopilot", { link = "String" })
hi(0, "CmpItemKindDefault", { fg = "#445f96" })
hi(0, "CmpItemKindEnum", { link = "Type" })
hi(0, "CmpItemKindEnumDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEnumMember", { link = "Constant" })
hi(0, "CmpItemKindEnumMemberDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindEventDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindField", { link = "@field" })
hi(0, "CmpItemKindFieldDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFile", { link = "Directory" })
hi(0, "CmpItemKindFileDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFolder", { link = "Directory" })
hi(0, "CmpItemKindFolderDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindFunction", { link = "Function" })
hi(0, "CmpItemKindFunctionDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindInterface", { link = "Type" })
hi(0, "CmpItemKindInterfaceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindKeyword", { link = "@keyword" })
hi(0, "CmpItemKindKeywordDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindMethod", { link = "Function" })
hi(0, "CmpItemKindMethodDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindModule", { link = "@include" })
hi(0, "CmpItemKindModuleDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindOperator", { link = "Operator" })
hi(0, "CmpItemKindOperatorDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindProperty", { link = "@property" })
hi(0, "CmpItemKindPropertyDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindReference", { link = "Type" })
hi(0, "CmpItemKindReferenceDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindSnippet", { fg = "#445f96" })
hi(0, "CmpItemKindSnippetDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindStruct", { link = "Type" })
hi(0, "CmpItemKindStructDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindText", { fg = "#787878" })
hi(0, "CmpItemKindTextDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindTypeParameter", { link = "Type" })
hi(0, "CmpItemKindTypeParameterDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindUnitDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindValue", { link = "String" })
hi(0, "CmpItemKindValueDefault", { link = "CmpItemKind" })
hi(0, "CmpItemKindVariable", { fg = "#d9a594" })
hi(0, "CmpItemKindVariableDefault", { link = "CmpItemKind" })
hi(0, "CmpItemMenu", { fg = "#a0a0a0" })
hi(0, "CmpItemMenuDefault", { fg = "#303030" })
hi(0, "ColorColumn", { bg = "#eeeeee" })
hi(0, "Comment", { fg = "#a0a0a0" })
hi(0, "Conceal", { bold = true, fg = "#7a8382" })
hi(0, "Constant", { fg = "#a06c4e" })
hi(0, "CurSearch", { link = "IncSearch" })
hi(0, "Cursor", { bg = "#1b1b1b", fg = "#e7e7e7" })
hi(0, "CursorColumn", { link = "CursorLine" })
hi(0, "CursorLine", { bg = "#eeeeee" })
hi(0, "CursorLineNr", { bold = true, fg = "#827f79" })
hi(0, "DapUIBreakpointsCurrentLine", { bold = true, fg = "#1b1b1b" })
hi(0, "DapUIBreakpointsDisabledLine", { link = "Comment" })
hi(0, "DapUIBreakpointsInfo", { fg = "#658594" })
hi(0, "DapUIBreakpointsPath", { link = "Directory" })
hi(0, "DapUIDecoration", { fg = "#b1b1d2" })
hi(0, "DapUIFloatBorder", { fg = "#b1b1d2" })
hi(0, "DapUILineNumber", { fg = "#445f96" })
hi(0, "DapUIModifiedValue", { bold = true, fg = "#445f96" })
hi(0, "DapUIPlayPause", { fg = "#6a824f" })
hi(0, "DapUIRestart", { fg = "#6a824f" })
hi(0, "DapUIScope", { link = "Special" })
hi(0, "DapUISource", { fg = "#b23b34" })
hi(0, "DapUIStepBack", { fg = "#445f96" })
hi(0, "DapUIStepInto", { fg = "#445f96" })
hi(0, "DapUIStepOut", { fg = "#445f96" })
hi(0, "DapUIStepOver", { fg = "#445f96" })
hi(0, "DapUIStop", { fg = "#d7474b" })
hi(0, "DapUIStoppedThread", { fg = "#445f96" })
hi(0, "DapUIThread", { fg = "#1b1b1b" })
hi(0, "DapUIType", { link = "Type" })
hi(0, "DapUIUnavailable", { fg = "#a0a0a0" })
hi(0, "DapUIWatchesEmpty", { fg = "#d7474b" })
hi(0, "DapUIWatchesError", { fg = "#d7474b" })
hi(0, "DapUIWatchesValue", { fg = "#1b1b1b" })
hi(0, "Delimiter", { fg = "#6e6b66" })
hi(0, "DiagnosticError", { fg = "#b23b34" })
hi(0, "DiagnosticHint", { fg = "#586e62" })
hi(0, "DiagnosticInfo", { fg = "#537788" })
hi(0, "DiagnosticOk", { fg = "#6a824f" })
hi(0, "DiagnosticSignError", { fg = "#b23b34" })
hi(0, "DiagnosticSignHint", { fg = "#586e62" })
hi(0, "DiagnosticSignInfo", { fg = "#537788" })
hi(0, "DiagnosticSignWarn", { fg = "#a0713c" })
hi(0, "DiagnosticUnderlineError", { sp = "#b23b34", undercurl = true })
hi(0, "DiagnosticUnderlineHint", { sp = "#586e62", undercurl = true })
hi(0, "DiagnosticUnderlineInfo", { sp = "#537788", undercurl = true })
hi(0, "DiagnosticUnderlineWarn", { sp = "#a0713c", undercurl = true })
hi(0, "DiagnosticVirtualTextError", { bg = "#e6c2c7", fg = "#b23b34" })
hi(0, "DiagnosticVirtualTextHint", { bg = "#d5dcd2", fg = "#586e62" })
hi(0, "DiagnosticVirtualTextInfo", { bg = "#d4d4f0", fg = "#537788" })
hi(0, "DiagnosticVirtualTextWarn", { bg = "#e2dcd4", fg = "#a0713c" })
hi(0, "DiagnosticWarn", { fg = "#a0713c" })
hi(0, "DiffAdd", { bg = "#d5dcd2" })
hi(0, "DiffChange", { bg = "#d4d4f0" })
hi(0, "DiffDelete", { fg = "#c8c8c8" })
hi(0, "DiffDeleted", { fg = "#b73242" })
hi(0, "DiffText", { bg = "#b1b1d2" })
hi(0, "Directory", { fg = "#537788" })
hi(0, "EndOfBuffer", { fg = "#e7e7e7" })
hi(0, "Error", { fg = "#e84444" })
hi(0, "ErrorMsg", { fg = "#e84444" })
hi(0, "Exception", { fg = "#b23b34" })
hi(0, "FloatBorder", { fg = "#b1b1d2" })
hi(0, "FloatFooter", { bg = "#f6f6f6", fg = "#a0a0a0" })
hi(0, "FloatTitle", { bg = "#f6f6f6", bold = true, fg = "#7a8382" })
hi(0, "FoldColumn", { fg = "#a0a0a0" })
hi(0, "Folded", { bg = "#eeeeee", fg = "#716e61" })
hi(0, "Function", { fg = "#537788" })
hi(0, "GitSignsAdd", { fg = "#969438" })
hi(0, "GitSignsChange", { fg = "#debe97" })
hi(0, "GitSignsDelete", { fg = "#d7474b" })
hi(0, "GitSignsDeletePreview", { bg = "#e6c2c7" })
hi(0, "GitSignsStagedAdd", { fg = "#4b4a1c" })
hi(0, "GitSignsStagedAddLn", { bg = "#d5dcd2" })
hi(0, "GitSignsStagedAddNr", { fg = "#4b4a1c" })
hi(0, "GitSignsStagedChange", { fg = "#6f5f4b" })
hi(0, "GitSignsStagedChangeLn", { bg = "#d4d4f0" })
hi(0, "GitSignsStagedChangeNr", { fg = "#6f5f4b" })
hi(0, "GitSignsStagedChangedelete", { fg = "#6f5f4b" })
hi(0, "GitSignsStagedChangedeleteLn", { bg = "#d4d4f0" })
hi(0, "GitSignsStagedChangedeleteNr", { fg = "#6f5f4b" })
hi(0, "GitSignsStagedDelete", { fg = "#6b2325" })
hi(0, "GitSignsStagedDeleteNr", { fg = "#6b2325" })
hi(0, "GitSignsStagedTopdelete", { fg = "#6b2325" })
hi(0, "GitSignsStagedTopdeleteNr", { fg = "#6b2325" })
hi(0, "GlanceBorderTop", { fg = "#d8d8d8" })
hi(0, "GlanceIndent", { link = "None" })
hi(0, "GlanceListBorderBottom", { link = "GlanceBorderTop" })
hi(0, "GlanceListCount", { bg = "#a292a3", fg = "#e7e7e7" })
hi(0, "GlanceListCursorLine", { bg = "#e7e7e7" })
hi(0, "GlanceListMatch", { bg = "#c8c8c8" })
hi(0, "GlanceListNormal", { bg = "#f6f6f6", fg = "#1b1b1b" })
hi(0, "GlancePreviewBorderBottom", { link = "GlanceBorderTop" })
hi(0, "GlancePreviewNormal", { bg = "#eeeeee", fg = "#1b1b1b" })
hi(0, "GlanceWinBarFilename", { bg = "#f6f6f6", fg = "#303030" })
hi(0, "GlanceWinBarFilepath", { bg = "#f6f6f6", fg = "#a0a0a0" })
hi(0, "GlanceWinBarTitle", { bg = "#f6f6f6", bold = true, fg = "#303030" })
hi(0, "Identifier", { fg = "#1b1b1b" })
hi(0, "Ignore", { link = "NonText" })
hi(0, "IncSearch", { bg = "#a0713c", bold = true, fg = "#f6f6f6" })
hi(0, "Keyword", { fg = "#b23b34" })
hi(0, "LazyProgressTodo", { fg = "#a0a0a0" })
hi(0, "LineNr", { fg = "#a0a0a0" })
hi(0, "LspCodeLens", { fg = "#a0a0a0" })
hi(0, "LspInfoBorder", { link = "FloatBorder" })
hi(0, "LspInlayHint", { link = "DiagnosticVirtualTextHint" })
hi(0, "LspReferenceRead", { link = "LspReferenceText" })
hi(0, "LspReferenceText", { bg = "#e2dcd4" })
hi(0, "LspReferenceWrite", { bg = "#e2dcd4", underline = true })
hi(0, "LspSignatureActiveParameter", { fg = "#c87b2e" })
hi(0, "MatchParen", { bg = "#c8c8c8" })
hi(0, "ModeMsg", { bold = true, fg = "#b23b34" })
hi(0, "MoreMsg", { fg = "#658594" })
hi(0, "MsgArea", { fg = "#303030" })
hi(0, "MsgSeparator", { bg = "#f6f6f6" })
hi(0, "NonText", { fg = "#a0a0a0" })
hi(0, "Normal", { bg = "#e7e7e7", fg = "#1b1b1b" })
hi(0, "NormalFloat", { link = "Normal" })
hi(0, "NormalNC", { link = "Normal" })
hi(0, "Number", { fg = "#a292a3" })
hi(0, "Operator", { fg = "#b23b34" })
hi(0, "Pmenu", { bg = "#f6f6f6", fg = "#303030" })
hi(0, "PmenuSbar", { bg = "#eeeeee" })
hi(0, "PmenuSel", { bg = "#1b1b1b", fg = "#f6f6f6" })
hi(0, "PmenuThumb", { bg = "#c8c8c8" })
hi(0, "PreProc", { fg = "#b23b34" })
hi(0, "Question", { link = "MoreMsg" })
hi(0, "QuickFixLine", { bg = "#d8d8d8" })
hi(0, "Search", { bg = "#d8d8d8" })
hi(0, "SignColumn", { fg = "#7a8382" })
hi(0, "Special", { fg = "#445f96" })
hi(0, "SpecialKey", { fg = "#7a8382" })
hi(0, "SpellBad", { underdashed = true })
hi(0, "SpellCap", { underdashed = true })
hi(0, "SpellLocal", { underdashed = true })
hi(0, "SpellRare", { underdashed = true })
hi(0, "Statement", { fg = "#373e50" })
hi(0, "StatusLine", { bg = "#e7e7e7", fg = "#e7e7e7" })
hi(0, "StatusLineGitAdded", { bg = "#f6f6f6", fg = "#6a824f" })
hi(0, "StatusLineGitChanged", { bg = "#f6f6f6", fg = "#a0713c" })
hi(0, "StatusLineGitRemoved", { bg = "#f6f6f6", fg = "#b23b34" })
hi(0, "StatusLineHeader", { bg = "#1b1b1b", fg = "#f6f6f6" })
hi(0, "StatusLineHeaderModified", { bg = "#b23b34", fg = "#f6f6f6" })
hi(0, "StatusLineNC", { link = "StatusLine" })
hi(0, "String", { fg = "#6a824f" })
hi(0, "Substitute", { bg = "#b73242", fg = "#1b1b1b" })
hi(0, "TabLine", { link = "StatusLineNC" })
hi(0, "TabLineFill", { link = "Normal" })
hi(0, "TabLineSel", { link = "StatusLine" })
hi(0, "TelescopeBorder", { bg = "#e7e7e7", fg = "#b1b1d2" })
hi(0, "TelescopeMatching", { bold = true, fg = "#b23b34" })
hi(0, "TelescopeNormal", { fg = "#787878" })
hi(0, "TelescopeResultsClass", { link = "Structure" })
hi(0, "TelescopeResultsField", { link = "@field" })
hi(0, "TelescopeResultsMethod", { link = "Function" })
hi(0, "TelescopeResultsStruct", { link = "Structure" })
hi(0, "TelescopeResultsVariable", { link = "@variable" })
hi(0, "TelescopeSelection", { link = "CursorLine" })
hi(0, "TelescopeSelectionCaret", { link = "CursorLineNr" })
hi(0, "TelescopeTitle", { fg = "#7a8382" })
hi(0, "TermCursor", { bg = "#b23b34", fg = "#e7e7e7" })
hi(0, "TermCursorNC", { bg = "#a0a0a0", fg = "#e7e7e7" })
hi(0, "Title", { bold = true, fg = "#537788" })
hi(0, "Todo", { bg = "#658594", bold = true, fg = "#f6f6f6" })
hi(0, "Type", { fg = "#586e62" })
hi(0, "Underlined", { fg = "#445f96", underline = true })
hi(0, "Visual", { bg = "#d8d8d8" })
hi(0, "WarningMsg", { fg = "#c87b2e" })
hi(0, "Whitespace", { fg = "#c8c8c8" })
hi(0, "WildMenu", { link = "Pmenu" })
hi(0, "WinBar", { fg = "#303030" })
hi(0, "WinBarNC", { link = "WinBar" })
hi(0, "WinSeparator", { fg = "#c8c8c8" })
hi(0, "bashSpecialVariables", { link = "Constant" })
hi(0, "debugPC", { bg = "#e6c2c7" })
hi(0, "diffAdded", { fg = "#969438" })
hi(0, "diffChanged", { fg = "#a0713c" })
hi(0, "diffNewFile", { fg = "#969438" })
hi(0, "diffOldFile", { fg = "#b73242" })
hi(0, "diffRemoved", { fg = "#b73242" })
hi(0, "fugitiveHash", { link = "gitHash" })
hi(0, "fugitiveHeader", { link = "Title" })
hi(0, "fugitiveStagedModifier", { fg = "#969438" })
hi(0, "fugitiveUnstagedModifier", { fg = "#a0713c" })
hi(0, "fugitiveUntrackedModifier", { fg = "#586e62" })
hi(0, "gitHash", { fg = "#a0a0a0" })
hi(0, "healthError", { fg = "#d7474b" })
hi(0, "healthSuccess", { fg = "#98bb6c" })
hi(0, "healthWarning", { fg = "#c87b2e" })
hi(0, "helpHeader", { link = "Title" })
hi(0, "helpSectionDelim", { link = "Title" })
hi(0, "htmlBold", { bold = true })
hi(0, "htmlBoldItalic", { bold = true, italic = true })
hi(0, "htmlH1", { bold = true, fg = "#b23b34" })
hi(0, "htmlH2", { bold = true, fg = "#b23b34" })
hi(0, "htmlH3", { bold = true, fg = "#b23b34" })
hi(0, "htmlH4", { bold = true, fg = "#b23b34" })
hi(0, "htmlH5", { bold = true, fg = "#b23b34" })
hi(0, "htmlH6", { bold = true, fg = "#b23b34" })
hi(0, "htmlItalic", { italic = true })
hi(0, "htmlLink", { fg = "#9fb5c9", underline = true })
hi(0, "htmlSpecialChar", { link = "SpecialChar" })
hi(0, "htmlSpecialTagName", { fg = "#373e50" })
hi(0, "htmlString", { fg = "#a0a0a0" })
hi(0, "htmlTagName", { link = "Tag" })
hi(0, "htmlTitle", { link = "Title" })
hi(0, "lCursor", { link = "Cursor" })
hi(0, "markdownBold", { bold = true })
hi(0, "markdownBoldItalic", { bold = true, italic = true })
hi(0, "markdownCode", { fg = "#6a824f" })
hi(0, "markdownCodeBlock", { fg = "#6a824f" })
hi(0, "markdownError", { link = "None" })
hi(0, "markdownH1", { link = "htmlH1" })
hi(0, "markdownH2", { link = "htmlH2" })
hi(0, "markdownH3", { link = "htmlH3" })
hi(0, "markdownH4", { link = "htmlH4" })
hi(0, "markdownH5", { link = "htmlH5" })
hi(0, "markdownH6", { link = "htmlH6" })
hi(0, "markdownListMarker", { fg = "#a0713c" })
hi(0, "qfFileName", { link = "Directory" })
hi(0, "qfLineNr", { link = "LineNr" })
hi(0, "shAstQuote", { link = "Constant" })
hi(0, "shCaseEsac", { link = "Operator" })
hi(0, "shDeref", { link = "Special" })
hi(0, "shDerefSimple", { link = "shDerefVar" })
hi(0, "shDerefVar", { link = "Constant" })
hi(0, "shNoQuote", { link = "shAstQuote" })
hi(0, "shQuote", { link = "String" })
hi(0, "shTestOpr", { link = "Operator" })

--
-- mini.tabline
--
hi(0, "TabLineSel", { bg = "#e7e7e7" })
hi(0, "TabLine", { bg = "#e7e7e7", fg = "#a0a0a0" })

hi(0, "MiniTablineVisible", { link = "TabLine" })
hi(0, "MiniTablineCurrent", { link = "TabLineSel" })

hi(0, "MiniTablineModifiedCurrent", { fg = "#b23b34", italic = true })
hi(0, "MiniTablineModifiedHidden", { fg = "#a0713c", italic = true })
hi(0, "MiniTablineModifiedVisible", { fg = "#a0713c", italic = true })

--
-- mini.diff
--
hi(0, "Added", { fg = "#6a824f" })
hi(0, "Changed", { fg = "#a0713c" })
hi(0, "Removed", { fg = "#b23b34" })

hi(0, "MiniDiffSignAdd", { fg = "#6a824f" })
hi(0, "MiniDiffSignChange", { fg = "#a0713c" })
hi(0, "MiniDiffSignDelete", { fg = "#b23b34" })

--
-- mini.pick
--
hi(0, "MiniPickBorder", { fg = "#537788" })

hi(0, "MiniPickBorderText", { link = "Normal" })
hi(0, "MiniPickMatchMarked", { link = "Normal" })
hi(0, "MiniPickMatchRanges", { link = "Normal" })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = "#e7e7e7"
g.terminal_color_1 = "#b23b34"
g.terminal_color_2 = "#6a824f"
g.terminal_color_3 = "#a0713c"
g.terminal_color_4 = "#537788"
g.terminal_color_5 = "#938aa9"
g.terminal_color_6 = "#586e62"
g.terminal_color_7 = "#a0a0a0"
g.terminal_color_8 = "#d8d8d8"
g.terminal_color_9 = "#e46876"
g.terminal_color_10 = "#87a987"
g.terminal_color_11 = "#debe97"
g.terminal_color_12 = "#7fb4ca"
g.terminal_color_13 = "#b1b1d2"
g.terminal_color_14 = "#7aa89f"
g.terminal_color_15 = "#1b1b1b"
